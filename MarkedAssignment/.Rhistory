df <- tibble(APPL=dailyReturn(AAPL),BG=dailyReturn(BG))
df
# all returns
df <- tibble(APPL=yearlyReturn(AAPL),BG=yearlyReturn(BG))
df
summary(df)
# all returns
dat <- tibble(APPL=yearlyReturn(AAPL),BG=yearlyReturn(BG))
summary(dat)
#standard deviations
sd_APPL=sd(dat$APPL.yearlyReturn)
#standard deviations
sd_APPL=sd(dat$APPL$APPL.yearlyReturn)
sd_APPL=sd(dat$APPL$APPL.yearlyReturn)
sd_BG=sd(dat$BG$BG.yearlyReturn)
#covariance
cov(dat$APPL$APPL.yearlyReturn,dat$BG$BG.yearlyReturn)
#covariance
cov(x=dat$APPL$APPL.yearlyReturn,y=dat$BG$BG.yearlyReturn)
dat$APPL$APPL.yearlyReturn
sd_APPL
#standard deviations
sd_APPL=sd(dat$APPL.APPL.yearlyReturn)
sd_APPL=sd(dat$APPL.APPL.yearlyReturn)
#standard deviations
sd_APPL=sd(dat$APPL %>% APPL.yearlyReturn)
#standard deviations
sd_APPL=sd(dat$APPL)
sd_APPL
#covariance
cov(x=dat$APPL,y=dat$BG)
sd_BG=sd(dat$BG)
# expected returns
er_APPL = mean(dat$APPL)
er_BG = mean(dat$BG)
new_dat <- df_w %>% mutate(er_P = wA*er_APPL + wB*er_BG,sd_P = sqrt((wA*sd_APPL)^2 + (wB*sd_BG)^2 + 2*wA*wB*sd_A*cov))
df_w <- tibble(wA=A_weights,
wB=(1-A_weights))
#create weights
A_weights <-seq(from =0,to = 1,length.out=10)
#data table with weights
df_w <- tibble(wA=A_weights,
wB=(1-A_weights))
# making the portflio
new_dat <- df_w %>% mutate(er_P = wA*er_APPL + wB*er_BG,sd_P = sqrt((wA*sd_APPL)^2 + (wB*sd_BG)^2 + 2*wA*wB*sd_A*cov))
# making the portflio
new_dat <- df_w %>% mutate(er_P = wA*er_APPL + wB*er_BG,sd_P = sqrt((wA*sd_APPL)^2 + (wB*sd_BG)^2 + 2*wA*wB*cov))
cov
#covariance
cov_p = cov(x=dat$APPL,y=dat$BG)
# making the portflio
new_dat <- df_w %>% mutate(er_P = wA*er_APPL + wB*er_BG,sd_P = sqrt((wA*sd_APPL)^2 + (wB*sd_BG)^2 + 2*wA*wB*cov_p))
new_dat
# plot
ggplot()+geom_point(data = new_dat,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_APPL,sd_BG),mean = c(er_APPL,er_BG)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "ro = 0.8")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_economist()
library(ggthemes)
# plot
ggplot()+geom_point(data = new_dat,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_APPL,sd_BG),mean = c(er_APPL,er_BG)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "ro = 0.8")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_economist()
```{r}
# plot
ggplot()+geom_point(data = new_dat,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_APPL,sd_BG),mean = c(er_APPL,er_BG)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "ro = 0.8")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_fivethirtyeight()
# plot
ggplot()+geom_point(data = new_dat,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_APPL,sd_BG),mean = c(er_APPL,er_BG)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "with APPL and BG")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_fivethirtyeight()
cov_p
summarise(dat)
summarise(new_dat)
summary(dat)
summary(new_dat)
summary(new_df)
# calculate new portfolio returns and s.d.
new_df <- df_w %>% mutate(er_P = wA*er_A + wB*er_B,sd_P = sqrt((wA*sd_A)^2 + (wB*sd_B)^2 + 2*new_ro*wA*wB*sd_A*sd_B))
# imported all the libraries
library(tidyverse)
library(ggthemes)
#expected returns on both stocks
er_A=0.11
er_B=0.17
#standard deviation on both stocks
sd_A=0.16
sd_B=0.26
#correlation coefficient
ro = 0.3
new_ro = 0.8
#create weights
A_weights <-seq(from =0,to = 1,length.out=10)
#data table with weights
df_w <- tibble(wA=A_weights,
wB=(1-A_weights))
#calculate portfolio returns and s.d.
df <- df_w %>% mutate(er_P = wA*er_A + wB*er_B,sd_P = sqrt((wA*sd_A)^2 + (wB*sd_B)^2 + 2*ro*wA*wB*sd_A*sd_B))
df
#time to plot the data
ggplot() +
geom_point(data = df, aes(x = sd_P, y = er_P,)) +
geom_point(data = tibble(sd = c(sd_A, sd_B), mean = c(er_A, er_B)),
aes(x = sd, y = mean), color = "red", size = 3, shape = 18)+ggtitle("Portfolio returns",subtitle = "ro = 0.3") +xlab("standard deviation of the portfolio")+ylab("expected return of the portfolio")+scale_y_continuous()+scale_x_continuous()+theme_economist()
# calculate new portfolio returns and s.d.
new_df <- df_w %>% mutate(er_P = wA*er_A + wB*er_B,sd_P = sqrt((wA*sd_A)^2 + (wB*sd_B)^2 + 2*new_ro*wA*wB*sd_A*sd_B))
new_df
#plot
ggplot()+geom_point(data = new_df,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_A,sd_B),mean = c(er_A,er_B)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "ro = 0.8")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_economist()
library(quantmod)
# data
getSymbols("AAPL")
getSymbols("BG")
# summary statistics
summary(AAPL)
summary(BG)
# all returns
dat <- tibble(APPL=yearlyReturn(AAPL),BG=yearlyReturn(BG))
summary(dat)
# expected returns
er_APPL = mean(dat$APPL)
er_BG = mean(dat$BG)
#standard deviations
sd_APPL=sd(dat$APPL)
sd_BG=sd(dat$BG)
#covariance
cov_p = cov(x=dat$APPL,y=dat$BG)
# making the portflio
new_dat <- df_w %>% mutate(er_P = wA*er_APPL + wB*er_BG,sd_P = sqrt((wA*sd_APPL)^2 + (wB*sd_BG)^2 + 2*wA*wB*cov_p))
new_dat
summary(new_df)
summary(new_dat)
#create weights
A_weights <-seq(from =0,to = 1,length.out=100)
# imported all the libraries
library(tidyverse)
library(ggthemes)
#expected returns on both stocks
er_A=0.11
er_B=0.17
#standard deviation on both stocks
sd_A=0.16
sd_B=0.26
#correlation coefficient
ro = 0.3
new_ro = 0.8
#create weights
A_weights <-seq(from =0,to = 1,length.out=100)
#data table with weights
df_w <- tibble(wA=A_weights,
wB=(1-A_weights))
#calculate portfolio returns and s.d.
df <- df_w %>% mutate(er_P = wA*er_A + wB*er_B,sd_P = sqrt((wA*sd_A)^2 + (wB*sd_B)^2 + 2*ro*wA*wB*sd_A*sd_B))
df
#time to plot the data
ggplot() +
geom_point(data = df, aes(x = sd_P, y = er_P,)) +
geom_point(data = tibble(sd = c(sd_A, sd_B), mean = c(er_A, er_B)),
aes(x = sd, y = mean), color = "red", size = 3, shape = 18)+ggtitle("Portfolio returns",subtitle = "ro = 0.3") +xlab("standard deviation of the portfolio")+ylab("expected return of the portfolio")+scale_y_continuous()+scale_x_continuous()+theme_economist()
# calculate new portfolio returns and s.d.
new_df <- df_w %>% mutate(er_P = wA*er_A + wB*er_B,sd_P = sqrt((wA*sd_A)^2 + (wB*sd_B)^2 + 2*new_ro*wA*wB*sd_A*sd_B))
new_df
#plot
ggplot()+geom_point(data = new_df,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_A,sd_B),mean = c(er_A,er_B)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "ro = 0.8")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_economist()
library(quantmod)
# data
getSymbols("AAPL")
getSymbols("BG")
# summary statistics
summary(AAPL)
summary(BG)
# all returns
dat <- tibble(APPL=yearlyReturn(AAPL),BG=yearlyReturn(BG))
summary(dat)
# expected returns
er_APPL = mean(dat$APPL)
er_BG = mean(dat$BG)
#standard deviations
sd_APPL=sd(dat$APPL)
sd_BG=sd(dat$BG)
#covariance
cov_p = cov(x=dat$APPL,y=dat$BG)
# making the portflio
new_dat <- df_w %>% mutate(er_P = wA*er_APPL + wB*er_BG,sd_P = sqrt((wA*sd_APPL)^2 + (wB*sd_BG)^2 + 2*wA*wB*cov_p))
new_dat
# plot
ggplot()+geom_point(data = new_dat,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_APPL,sd_BG),mean = c(er_APPL,er_BG)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "with APPL and BG")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_fivethirtyeight()
2*ro*wA*wB*sd_A*sd_B
2*ro*sd_A*sd_B
2*cov_p
# imported all the libraries
library(tidyverse)
library(ggthemes)
#expected returns on both stocks
er_A=0.11
er_B=0.17
#standard deviation on both stocks
sd_A=0.16
sd_B=0.26
#correlation coefficient
ro = 0.3
new_ro = 0.8
#create weights
A_weights <-seq(from =0,to = 1,length.out=10)
#data table with weights
df_w <- tibble(wA=A_weights,
wB=(1-A_weights))
#calculate portfolio returns and s.d.
df <- df_w %>% mutate(er_P = wA*er_A + wB*er_B,sd_P = sqrt((wA*sd_A)^2 + (wB*sd_B)^2 + 2*ro*wA*wB*sd_A*sd_B))
df
#time to plot the data
ggplot() +
geom_point(data = df, aes(x = sd_P, y = er_P,)) +
geom_point(data = tibble(sd = c(sd_A, sd_B), mean = c(er_A, er_B)),
aes(x = sd, y = mean), color = "red", size = 3, shape = 18)+ggtitle("Portfolio returns",subtitle = "ro = 0.3") +xlab("standard deviation of the portfolio")+ylab("expected return of the portfolio")+scale_y_continuous()+scale_x_continuous()+theme_economist()
# calculate new portfolio returns and s.d.
new_df <- df_w %>% mutate(er_P = wA*er_A + wB*er_B,sd_P = sqrt((wA*sd_A)^2 + (wB*sd_B)^2 + 2*new_ro*wA*wB*sd_A*sd_B))
new_df
#plot
ggplot()+geom_point(data = new_df,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_A,sd_B),mean = c(er_A,er_B)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "ro = 0.8")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_economist()
library(quantmod)
# data
getSymbols("AAPL")
getSymbols("BG")
# summary statistics
summary(AAPL)
summary(BG)
# all returns
dat <- tibble(APPL=yearlyReturn(AAPL),BG=yearlyReturn(BG))
summary(dat)
# expected returns
er_APPL = mean(dat$APPL)
er_BG = mean(dat$BG)
#standard deviations
sd_APPL=sd(dat$APPL)
sd_BG=sd(dat$BG)
#covariance
cov_p = cov(x=dat$APPL,y=dat$BG)
# making the portflio
new_dat <- df_w %>% mutate(er_P = wA*er_APPL + wB*er_BG,sd_P = sqrt((wA*sd_APPL)^2 + (wB*sd_BG)^2 + 2*wA*wB*cov_p))
new_dat
# plot
ggplot()+geom_point(data = new_dat,aes(y=er_P,x=sd_P))+geom_point(data = tibble(sd =c(sd_APPL,sd_BG),mean = c(er_APPL,er_BG)),aes(x=sd,y=mean),color = "red",size=3,shape=18)+ggtitle("Portfolio returns",subtitle = "with APPL and BG")+xlab("standard deviation")+ylab("expected returns")+scale_y_continuous()+scale_x_continuous()+theme_fivethirtyeight()
setwd("~/Documents/Coursework/COEC371/problem_sets/MarkedAssignment")
# attempt to regress
reg1 = data %>% lm(formula = (LO-RF) ~ RP-1)
# importing libraries
library(tidyverse)
library(readxl)
library(stats)
data =read_excel('VW_5_OP_Mkt_Rf_Monthly_196910_201909.xlsx')
# calculating the risk premium
data <- data %>% mutate(RP = MKT - RF)
summary(data)
str(data)
data %>% ggplot( aes(y = LO-RF, x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
# attempt to regress
reg1 = data %>% lm(formula = (LO-RF) ~ RP-1)
reg1
reg1 = data %>% lm(formula = (LO) ~ RF + RP)
reg1
reg1 = data %>% lm(formula = (LO) ~ RF + RP-1)
reg1
reg1 = data %>% lm(formula = (LO) ~ RF-1 + RP-1)
reg1
reg1 = data %>% lm(formula = (LO-RF) ~ RP-1)
reg1
reg5 = data %>% lm(formula = (HI-RF) ~ RP-1)
reg5
plot(reg5)
data %>% ggplot( aes(y = LO-RF, x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = LO-RF, x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = (LO-RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = (LO-RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') #+ geom_abline(method='lm')
data %>% ggplot( aes(y = (LO-RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = (HI-RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = (RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = (HI), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = (LO), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = (LO-RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
data %>% ggplot( aes(y = (LO-RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='glm')
data %>% ggplot( aes(y = (LO-RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_abline(method='lm')
??geom_abline
data %>% ggplot( aes(y = (LO-RF), x = RP)) + geom_point(col='blue') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_smooth(method='lm')
data %>% ggplot( aes(y = (LO-RF), x = RP)) + geom_point(col='red') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_smooth(method='lm')
data %>% ggplot( aes(y = (HI-RF), x = RP)) + geom_point(col='red') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_smooth(method='lm')
reg1
reg5
reg1 = data %>% lm(formula = mean(LO) - RF ~  RP-1)
reg1
reg1 = data %>% lm(formula = mean(LO) - RF ~  (mean(MR)-RF) -1)
reg1 = data %>% lm(formula = mean(LO) - RF ~  (mean(MKT)-RF) -1)
# calculating the risk premium
data <- data %>% mutate(RP = mean(MKT) - RF)
summary(data)
reg1 = data %>% lm(formula = mean(LO) - RF ~  RP-1)
reg1
reg5 = data %>% lm(formula = mean(HI) - RF ~  RP-1)
reg5
data %>% ggplot( aes(y = (mean(HI)-RF), x = RP)) + geom_point(col='red') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_smooth(method='lm')
data %>% ggplot( aes(y = (mean(LO)-RF), x = RP)) + geom_point(col='red') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_smooth(method='lm')
# attempt to regress
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
reg2 = data %>% lm(formula = (mean(QNT2)-RF) ~ RP-1)
reg3 = data %>% lm(formula = (mean(QNT3)-RF) ~ RP-1)
reg4 = data %>% lm(formula = (mean(QNT4)-RF) ~ RP-1)
reg5 = data %>% lm(formula = (mean(QNT5)-RF) ~ RP-1)
# attempt to regress
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
reg2 = data %>% lm(formula = (mean(QNT2)-RF) ~ RP-1)
reg3 = data %>% lm(formula = (mean(QNT3)-RF) ~ RP-1)
reg4 = data %>% lm(formula = (mean(QNT4)-RF) ~ RP-1)
reg5 = data %>% lm(formula = (mean(HI)-RF) ~ RP-1)
#create a table
stock <- c('LO','QNT2','QNT3','QNT4','HI')
ER <- c(reg1$coefficients[3],
reg2$coefficients[3],
reg3$coefficients[3],
reg4$coefficients[3],
reg5$coefficients[3])
df <- tibble(stock,ER)
df
# attempt to regress
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
reg2 = data %>% lm(formula = (mean(QNT2)-RF) ~ RP-1)
reg3 = data %>% lm(formula = (mean(QNT3)-RF) ~ RP-1)
reg4 = data %>% lm(formula = (mean(QNT4)-RF) ~ RP-1)
reg5 = data %>% lm(formula = (mean(HI)-RF) ~ RP-1)
#create a table
stock <- c('LO','QNT2','QNT3','QNT4','HI')
ER <- c(reg1$coefficients[1],
reg2$coefficients[3],
reg3$coefficients[3],
reg4$coefficients[3],
reg5$coefficients[3])
df <- tibble(stock,ER)
df
# attempt to regress
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
reg2 = data %>% lm(formula = (mean(QNT2)-RF) ~ RP-1)
reg3 = data %>% lm(formula = (mean(QNT3)-RF) ~ RP-1)
reg4 = data %>% lm(formula = (mean(QNT4)-RF) ~ RP-1)
reg5 = data %>% lm(formula = (mean(HI)-RF) ~ RP-1)
#create a table
stock <- c('LO','QNT2','QNT3','QNT4','HI')
ER <- c(reg1$coefficients[1],
reg2$coefficients[1],
reg3$coefficients[1],
reg4$coefficients[1],
reg5$coefficients[1])
df <- tibble(stock,ER)
df
# attempt to regress
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
reg2 = data %>% lm(formula = (mean(QNT2)-RF) ~ RP-1)
reg3 = data %>% lm(formula = (mean(QNT3)-RF) ~ RP-1)
reg4 = data %>% lm(formula = (mean(QNT4)-RF) ~ RP-1)
reg5 = data %>% lm(formula = (mean(HI)-RF) ~ RP-1)
#create a table
stock <- c('LO','QNT2','QNT3','QNT4','HI')
ER <- c(reg1$coefficients[1],
reg2$coefficients[1],
reg3$coefficients[1],
reg4$coefficients[1],
reg5$coefficients[1])
df <- tibble(stock,betas)
# attempt to regress
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
reg2 = data %>% lm(formula = (mean(QNT2)-RF) ~ RP-1)
reg3 = data %>% lm(formula = (mean(QNT3)-RF) ~ RP-1)
reg4 = data %>% lm(formula = (mean(QNT4)-RF) ~ RP-1)
reg5 = data %>% lm(formula = (mean(HI)-RF) ~ RP-1)
#create a table
stock <- c('LO','QNT2','QNT3','QNT4','HI')
betas <- c(reg1$coefficients[1],
reg2$coefficients[1],
reg3$coefficients[1],
reg4$coefficients[1],
reg5$coefficients[1])
df <- tibble(stock,betas)
df
?predict.lm
predict.lm(reg1)
betas[1]
betas$1
betas[1]
val(betas[1])
#predictions
a_LO = mean(LO) - (MKT + betas[1](RP))
#predictions
a_LO = data %>% (mean(LO) - (MKT + betas[1](RP)))
#predictions
a_LO = (mean(data$LO) - (data$MKT + betas[1](data$RP)))
#predictions
a_LO = mean(data$LO) - (data$MKT + betas[1](data$RP))
#predictions
a_LO = mean(data$LO) - (data$MKT + betas[1]*(data$RP))
a_LO
data = data %>% mutate(a_LO = mean(LO) - (MKT + betas[1]*(RP)))
str(data)
a_LO <-  mean(LO) - (MKT + betas[1]*(RP))
#predictions
a_LO =  mean(LO) - (MKT + betas[1]*(RP))
#ALPHA
data <-  data %>% mutate(a_LO = mean(LO) - (MKT + betas[1]*(RP)))
data <-  data %>% mutate(a_QNT2 = mean(QNT2) - (MKT + betas[2]*(RP)))
data <-  data %>% mutate(a_QNT3 = mean(QNT3) - (MKT + betas[3]*(RP)))
data <-  data %>% mutate(a_QNT4 = mean(QNT4) - (MKT + betas[4]*(RP)))
data <-  data %>% mutate(a_HI = mean(HI) - (MKT + betas[5]*(RP)))
# summary
summary(data)
# summary
alphas = select(data,starts_with("a_"))
summary(alphas)
data %>% lm(a_LO~1)
data %>% lm(formula =(a_LO~1))
data %>% lm(formula =(a_LO~1)) %>% summary()
data %>% lm(formula = (mean(LO) ~ (MKT + betas[1]*(RP)))) %>% summary()
data %>% lm(formula = (mean(LO) ~ (MKT + betas[1]*(RP)))) %>% summary()
data %>% lm(formula = (mean(LO) ~ (RF + betas[1]*(RP)))) %>% summary()
#ALPHA
data <-  data %>% mutate(a_LO = mean(LO) - (RF + betas[1]*(RP)))
data <-  data %>% mutate(a_QNT2 = mean(QNT2) - (RF + betas[2]*(RP)))
data <-  data %>% mutate(a_QNT3 = mean(QNT3) - (RF + betas[3]*(RP)))
data <-  data %>% mutate(a_QNT4 = mean(QNT4) - (RF + betas[4]*(RP)))
data <-  data %>% mutate(a_HI = mean(HI) - (RF + betas[5]*(RP)))
# summary
alphas = select(data,starts_with("a_"))
summary(alphas)
data %>% lm(formula = ( (MKT + betas[1]*(RP))~mean(LO))) %>% summary()
data %>% lm(formula = (LO ~ (RF + betas[1]*(RP)))) %>% summary()
data %>% lm(formula = (LO ~ RF + betas[1]*(RP))) %>% summary()
data %>% lm(formula = (mean(LO) ~ betas[1]) %>% summary()
)
data %>% lm(formula = (mean(LO) ~ betas[1])) %>% summary()
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP)
reg1
summary(reg1)
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ -RP)
summary(reg1)
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ -1*RP)
summary(reg1)
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP)
summary(reg1)
?lm
residuals(reg1)
summary(reg1)
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
summary(reg1)
residuals(reg1) %>% summary()
?residuals
residuals.lm(reg1)
residuals.lm(reg1) %>% summary()
summary(reg1)
reg1$coefficients
reg1$residuals
reg1$df.residuals
anova(reg1)
reg1
aov(reg1)
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
reg1 = data %>% anova.lm(formula = (mean(LO)-RF) ~ RP-1)
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
aov(reg1)
reg1 = data %>% aov(formula = (mean(LO)-RF) ~ RP-1)
reg1
summary(reg1)
reg1 = data %>% lm(formula = (mean(LO)-RF) ~ RP-1)
reg1$anova
anova.reg1
anova(reg1)
anova(reg1) %>% summary()
influence(reg1)
anova(reg1) %>% summary()
anova(reg1)
reg1
reg1 = data %>% lm(formula = mean(LO) ~ (mean(LO)-RF) - RP-1)
reg1
summary(reg1)
sd(alphas)
sapply(alphas,sd)
sapply(alphas,mean)
t.test(data$a_LO,mu=-0.040819987)
t.test(data$a_LO,mu=-0.040819987) %>% summary()
t.test(data$a_LO,mu=-0.040819987)
# t-tests
t.test(data$a_LO,mu=mu[1])
# data frame with all the means
mu = sapply(alphas,mean)
# t-tests
t.test(data$a_LO,mu=mu[1])
t_QNT2 = t.test(data$a_QNT2,mu=mu[2])
t_QNT2
density(t_LO)
density(t_QNT2)
density(t_QNT2) %>% plot()
density(a_LO)
density(a_LO) %>% plot()
density(a_HI) %>% plot()
data %>% density(a_HI) %>% plot()
density(data$a_HI) %>% plot()
t.test(a_HI)
t.test(data$a_HI)
t.test(data$a_HI,mu=mu[5])
t.test(data$a_HI)
t.test(data$a_LO)
data %>% density(a_QNT2) %>% plot()
density(data$a_QNT2) %>% plot()
density(data$a_QNT3) %>% plot()
density(data$a_QNT4) %>% plot()
density(data$a_LO)
density(data$a_LO) %>% summary()
# density plots
plot(density(data$LO))
plot(density(data$QNT2))
plot(density(data$QNT3))
plot(density(data$QNT4))
plot(density(data$HI))
data %>% ggplot( aes(y = (mean(HI)-RF), x = RP)) + geom_point(col='red') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_smooth(method='lm')
data %>% ggplot( aes(y = (mean(QNT2)-RF), x = RP)) + geom_point(col='red') + xlab('Market Excess Return') + ylab('Portfolio Excess Return') + ggtitle('LO') + geom_smooth(method='lm')
